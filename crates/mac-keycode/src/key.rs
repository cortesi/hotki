#[allow(missing_docs)]
#[repr(u16)]
#[derive(Copy, Clone, Debug, Eq, PartialEq, Hash)]
pub enum Key {
    A = 0x0,
    S = 0x1,
    D = 0x2,
    F = 0x3,
    H = 0x4,
    G = 0x5,
    Z = 0x6,
    X = 0x7,
    C = 0x8,
    V = 0x9,
    ISOSection = 0xA,
    B = 0xB,
    Q = 0xC,
    W = 0xD,
    E = 0xE,
    R = 0xF,
    Y = 0x10,
    T = 0x11,
    Digit1 = 0x12,
    Digit2 = 0x13,
    Digit3 = 0x14,
    Digit4 = 0x15,
    Digit6 = 0x16,
    Digit5 = 0x17,
    Equal = 0x18,
    Digit9 = 0x19,
    Digit7 = 0x1A,
    Minus = 0x1B,
    Digit8 = 0x1C,
    Digit0 = 0x1D,
    RightBracket = 0x1E,
    O = 0x1F,
    U = 0x20,
    LeftBracket = 0x21,
    I = 0x22,
    P = 0x23,
    Return = 0x24,
    L = 0x25,
    J = 0x26,
    Quote = 0x27,
    K = 0x28,
    Semicolon = 0x29,
    Backslash = 0x2A,
    Comma = 0x2B,
    Slash = 0x2C,
    N = 0x2D,
    M = 0x2E,
    Period = 0x2F,
    Tab = 0x30,
    Space = 0x31,
    Grave = 0x32,
    Delete = 0x33,
    Escape = 0x35,
    RightCommand = 0x36,
    Command = 0x37,
    Shift = 0x38,
    CapsLock = 0x39,
    Option = 0x3A,
    Control = 0x3B,
    RightShift = 0x3C,
    RightOption = 0x3D,
    RightControl = 0x3E,
    Function = 0x3F,
    F17 = 0x40,
    KeypadDecimal = 0x41,
    KeypadMultiply = 0x43,
    KeypadPlus = 0x45,
    KeypadClear = 0x47,
    VolumeUp = 0x48,
    VolumeDown = 0x49,
    Mute = 0x4A,
    KeypadDivide = 0x4B,
    KeypadEnter = 0x4C,
    KeypadMinus = 0x4E,
    F18 = 0x4F,
    F19 = 0x50,
    KeypadEquals = 0x51,
    Keypad0 = 0x52,
    Keypad1 = 0x53,
    Keypad2 = 0x54,
    Keypad3 = 0x55,
    Keypad4 = 0x56,
    Keypad5 = 0x57,
    Keypad6 = 0x58,
    Keypad7 = 0x59,
    F20 = 0x5A,
    Keypad8 = 0x5B,
    Keypad9 = 0x5C,
    JISYen = 0x5D,
    JISUnderscore = 0x5E,
    JISKeypadComma = 0x5F,
    F5 = 0x60,
    F6 = 0x61,
    F7 = 0x62,
    F3 = 0x63,
    F8 = 0x64,
    F9 = 0x65,
    JISEisu = 0x66,
    F11 = 0x67,
    JISKana = 0x68,
    F13 = 0x69,
    F16 = 0x6A,
    F14 = 0x6B,
    F10 = 0x6D,
    ContextualMenu = 0x6E,
    F12 = 0x6F,
    F15 = 0x71,
    Help = 0x72,
    Home = 0x73,
    PageUp = 0x74,
    ForwardDelete = 0x75,
    F4 = 0x76,
    End = 0x77,
    F2 = 0x78,
    PageDown = 0x79,
    F1 = 0x7A,
    LeftArrow = 0x7B,
    RightArrow = 0x7C,
    DownArrow = 0x7D,
    UpArrow = 0x7E,
}
impl Key {
    #[doc = r" Returns the canonical name for this key (the enum variant string)."]
    pub fn name(self) -> &'static str {
        match self {
            Key::A => "A",
            Key::S => "S",
            Key::D => "D",
            Key::F => "F",
            Key::H => "H",
            Key::G => "G",
            Key::Z => "Z",
            Key::X => "X",
            Key::C => "C",
            Key::V => "V",
            Key::ISOSection => "ISOSection",
            Key::B => "B",
            Key::Q => "Q",
            Key::W => "W",
            Key::E => "E",
            Key::R => "R",
            Key::Y => "Y",
            Key::T => "T",
            Key::Digit1 => "Digit1",
            Key::Digit2 => "Digit2",
            Key::Digit3 => "Digit3",
            Key::Digit4 => "Digit4",
            Key::Digit6 => "Digit6",
            Key::Digit5 => "Digit5",
            Key::Equal => "Equal",
            Key::Digit9 => "Digit9",
            Key::Digit7 => "Digit7",
            Key::Minus => "Minus",
            Key::Digit8 => "Digit8",
            Key::Digit0 => "Digit0",
            Key::RightBracket => "RightBracket",
            Key::O => "O",
            Key::U => "U",
            Key::LeftBracket => "LeftBracket",
            Key::I => "I",
            Key::P => "P",
            Key::Return => "Return",
            Key::L => "L",
            Key::J => "J",
            Key::Quote => "Quote",
            Key::K => "K",
            Key::Semicolon => "Semicolon",
            Key::Backslash => "Backslash",
            Key::Comma => "Comma",
            Key::Slash => "Slash",
            Key::N => "N",
            Key::M => "M",
            Key::Period => "Period",
            Key::Tab => "Tab",
            Key::Space => "Space",
            Key::Grave => "Grave",
            Key::Delete => "Delete",
            Key::Escape => "Escape",
            Key::RightCommand => "RightCommand",
            Key::Command => "Command",
            Key::Shift => "Shift",
            Key::CapsLock => "CapsLock",
            Key::Option => "Option",
            Key::Control => "Control",
            Key::RightShift => "RightShift",
            Key::RightOption => "RightOption",
            Key::RightControl => "RightControl",
            Key::Function => "Function",
            Key::F17 => "F17",
            Key::KeypadDecimal => "KeypadDecimal",
            Key::KeypadMultiply => "KeypadMultiply",
            Key::KeypadPlus => "KeypadPlus",
            Key::KeypadClear => "KeypadClear",
            Key::VolumeUp => "VolumeUp",
            Key::VolumeDown => "VolumeDown",
            Key::Mute => "Mute",
            Key::KeypadDivide => "KeypadDivide",
            Key::KeypadEnter => "KeypadEnter",
            Key::KeypadMinus => "KeypadMinus",
            Key::F18 => "F18",
            Key::F19 => "F19",
            Key::KeypadEquals => "KeypadEquals",
            Key::Keypad0 => "Keypad0",
            Key::Keypad1 => "Keypad1",
            Key::Keypad2 => "Keypad2",
            Key::Keypad3 => "Keypad3",
            Key::Keypad4 => "Keypad4",
            Key::Keypad5 => "Keypad5",
            Key::Keypad6 => "Keypad6",
            Key::Keypad7 => "Keypad7",
            Key::F20 => "F20",
            Key::Keypad8 => "Keypad8",
            Key::Keypad9 => "Keypad9",
            Key::JISYen => "JISYen",
            Key::JISUnderscore => "JISUnderscore",
            Key::JISKeypadComma => "JISKeypadComma",
            Key::F5 => "F5",
            Key::F6 => "F6",
            Key::F7 => "F7",
            Key::F3 => "F3",
            Key::F8 => "F8",
            Key::F9 => "F9",
            Key::JISEisu => "JISEisu",
            Key::F11 => "F11",
            Key::JISKana => "JISKana",
            Key::F13 => "F13",
            Key::F16 => "F16",
            Key::F14 => "F14",
            Key::F10 => "F10",
            Key::ContextualMenu => "ContextualMenu",
            Key::F12 => "F12",
            Key::F15 => "F15",
            Key::Help => "Help",
            Key::Home => "Home",
            Key::PageUp => "PageUp",
            Key::ForwardDelete => "ForwardDelete",
            Key::F4 => "F4",
            Key::End => "End",
            Key::F2 => "F2",
            Key::PageDown => "PageDown",
            Key::F1 => "F1",
            Key::LeftArrow => "LeftArrow",
            Key::RightArrow => "RightArrow",
            Key::DownArrow => "DownArrow",
            Key::UpArrow => "UpArrow",
        }
    }
    #[doc = r" Looks up a `Key` from a hardware virtual keycode (HIToolbox kVK value)."]
    pub fn from_keycode(code: u16) -> Option<Self> {
        match code {
            0x0 => Some(Key::A),
            0x1 => Some(Key::S),
            0x2 => Some(Key::D),
            0x3 => Some(Key::F),
            0x4 => Some(Key::H),
            0x5 => Some(Key::G),
            0x6 => Some(Key::Z),
            0x7 => Some(Key::X),
            0x8 => Some(Key::C),
            0x9 => Some(Key::V),
            0xA => Some(Key::ISOSection),
            0xB => Some(Key::B),
            0xC => Some(Key::Q),
            0xD => Some(Key::W),
            0xE => Some(Key::E),
            0xF => Some(Key::R),
            0x10 => Some(Key::Y),
            0x11 => Some(Key::T),
            0x12 => Some(Key::Digit1),
            0x13 => Some(Key::Digit2),
            0x14 => Some(Key::Digit3),
            0x15 => Some(Key::Digit4),
            0x16 => Some(Key::Digit6),
            0x17 => Some(Key::Digit5),
            0x18 => Some(Key::Equal),
            0x19 => Some(Key::Digit9),
            0x1A => Some(Key::Digit7),
            0x1B => Some(Key::Minus),
            0x1C => Some(Key::Digit8),
            0x1D => Some(Key::Digit0),
            0x1E => Some(Key::RightBracket),
            0x1F => Some(Key::O),
            0x20 => Some(Key::U),
            0x21 => Some(Key::LeftBracket),
            0x22 => Some(Key::I),
            0x23 => Some(Key::P),
            0x24 => Some(Key::Return),
            0x25 => Some(Key::L),
            0x26 => Some(Key::J),
            0x27 => Some(Key::Quote),
            0x28 => Some(Key::K),
            0x29 => Some(Key::Semicolon),
            0x2A => Some(Key::Backslash),
            0x2B => Some(Key::Comma),
            0x2C => Some(Key::Slash),
            0x2D => Some(Key::N),
            0x2E => Some(Key::M),
            0x2F => Some(Key::Period),
            0x30 => Some(Key::Tab),
            0x31 => Some(Key::Space),
            0x32 => Some(Key::Grave),
            0x33 => Some(Key::Delete),
            0x35 => Some(Key::Escape),
            0x36 => Some(Key::RightCommand),
            0x37 => Some(Key::Command),
            0x38 => Some(Key::Shift),
            0x39 => Some(Key::CapsLock),
            0x3A => Some(Key::Option),
            0x3B => Some(Key::Control),
            0x3C => Some(Key::RightShift),
            0x3D => Some(Key::RightOption),
            0x3E => Some(Key::RightControl),
            0x3F => Some(Key::Function),
            0x40 => Some(Key::F17),
            0x41 => Some(Key::KeypadDecimal),
            0x43 => Some(Key::KeypadMultiply),
            0x45 => Some(Key::KeypadPlus),
            0x47 => Some(Key::KeypadClear),
            0x48 => Some(Key::VolumeUp),
            0x49 => Some(Key::VolumeDown),
            0x4A => Some(Key::Mute),
            0x4B => Some(Key::KeypadDivide),
            0x4C => Some(Key::KeypadEnter),
            0x4E => Some(Key::KeypadMinus),
            0x4F => Some(Key::F18),
            0x50 => Some(Key::F19),
            0x51 => Some(Key::KeypadEquals),
            0x52 => Some(Key::Keypad0),
            0x53 => Some(Key::Keypad1),
            0x54 => Some(Key::Keypad2),
            0x55 => Some(Key::Keypad3),
            0x56 => Some(Key::Keypad4),
            0x57 => Some(Key::Keypad5),
            0x58 => Some(Key::Keypad6),
            0x59 => Some(Key::Keypad7),
            0x5A => Some(Key::F20),
            0x5B => Some(Key::Keypad8),
            0x5C => Some(Key::Keypad9),
            0x5D => Some(Key::JISYen),
            0x5E => Some(Key::JISUnderscore),
            0x5F => Some(Key::JISKeypadComma),
            0x60 => Some(Key::F5),
            0x61 => Some(Key::F6),
            0x62 => Some(Key::F7),
            0x63 => Some(Key::F3),
            0x64 => Some(Key::F8),
            0x65 => Some(Key::F9),
            0x66 => Some(Key::JISEisu),
            0x67 => Some(Key::F11),
            0x68 => Some(Key::JISKana),
            0x69 => Some(Key::F13),
            0x6A => Some(Key::F16),
            0x6B => Some(Key::F14),
            0x6D => Some(Key::F10),
            0x6E => Some(Key::ContextualMenu),
            0x6F => Some(Key::F12),
            0x71 => Some(Key::F15),
            0x72 => Some(Key::Help),
            0x73 => Some(Key::Home),
            0x74 => Some(Key::PageUp),
            0x75 => Some(Key::ForwardDelete),
            0x76 => Some(Key::F4),
            0x77 => Some(Key::End),
            0x78 => Some(Key::F2),
            0x79 => Some(Key::PageDown),
            0x7A => Some(Key::F1),
            0x7B => Some(Key::LeftArrow),
            0x7C => Some(Key::RightArrow),
            0x7D => Some(Key::DownArrow),
            0x7E => Some(Key::UpArrow),
            _ => None,
        }
    }
    #[doc = r" Case-insensitive lookup of a `Key` from its name."]
    #[doc = r""]
    #[doc = r#" Accepts strings like "Tab", "tab", or "TAB"."#]
    pub fn from_name(name: &str) -> Option<Self> {
        let lowered = name.to_ascii_lowercase();
        match lowered.as_str() {
            "a" => Some(Key::A),
            "s" => Some(Key::S),
            "d" => Some(Key::D),
            "f" => Some(Key::F),
            "h" => Some(Key::H),
            "g" => Some(Key::G),
            "z" => Some(Key::Z),
            "x" => Some(Key::X),
            "c" => Some(Key::C),
            "v" => Some(Key::V),
            "isosection" => Some(Key::ISOSection),
            "b" => Some(Key::B),
            "q" => Some(Key::Q),
            "w" => Some(Key::W),
            "e" => Some(Key::E),
            "r" => Some(Key::R),
            "y" => Some(Key::Y),
            "t" => Some(Key::T),
            "digit1" => Some(Key::Digit1),
            "digit2" => Some(Key::Digit2),
            "digit3" => Some(Key::Digit3),
            "digit4" => Some(Key::Digit4),
            "digit6" => Some(Key::Digit6),
            "digit5" => Some(Key::Digit5),
            "equal" => Some(Key::Equal),
            "digit9" => Some(Key::Digit9),
            "digit7" => Some(Key::Digit7),
            "minus" => Some(Key::Minus),
            "digit8" => Some(Key::Digit8),
            "digit0" => Some(Key::Digit0),
            "rightbracket" => Some(Key::RightBracket),
            "o" => Some(Key::O),
            "u" => Some(Key::U),
            "leftbracket" => Some(Key::LeftBracket),
            "i" => Some(Key::I),
            "p" => Some(Key::P),
            "return" => Some(Key::Return),
            "l" => Some(Key::L),
            "j" => Some(Key::J),
            "quote" => Some(Key::Quote),
            "k" => Some(Key::K),
            "semicolon" => Some(Key::Semicolon),
            "backslash" => Some(Key::Backslash),
            "comma" => Some(Key::Comma),
            "slash" => Some(Key::Slash),
            "n" => Some(Key::N),
            "m" => Some(Key::M),
            "period" => Some(Key::Period),
            "tab" => Some(Key::Tab),
            "space" => Some(Key::Space),
            "grave" => Some(Key::Grave),
            "delete" => Some(Key::Delete),
            "escape" => Some(Key::Escape),
            "rightcommand" => Some(Key::RightCommand),
            "command" => Some(Key::Command),
            "shift" => Some(Key::Shift),
            "capslock" => Some(Key::CapsLock),
            "option" => Some(Key::Option),
            "control" => Some(Key::Control),
            "rightshift" => Some(Key::RightShift),
            "rightoption" => Some(Key::RightOption),
            "rightcontrol" => Some(Key::RightControl),
            "function" => Some(Key::Function),
            "f17" => Some(Key::F17),
            "keypaddecimal" => Some(Key::KeypadDecimal),
            "keypadmultiply" => Some(Key::KeypadMultiply),
            "keypadplus" => Some(Key::KeypadPlus),
            "keypadclear" => Some(Key::KeypadClear),
            "volumeup" => Some(Key::VolumeUp),
            "volumedown" => Some(Key::VolumeDown),
            "mute" => Some(Key::Mute),
            "keypaddivide" => Some(Key::KeypadDivide),
            "keypadenter" => Some(Key::KeypadEnter),
            "keypadminus" => Some(Key::KeypadMinus),
            "f18" => Some(Key::F18),
            "f19" => Some(Key::F19),
            "keypadequals" => Some(Key::KeypadEquals),
            "keypad0" => Some(Key::Keypad0),
            "keypad1" => Some(Key::Keypad1),
            "keypad2" => Some(Key::Keypad2),
            "keypad3" => Some(Key::Keypad3),
            "keypad4" => Some(Key::Keypad4),
            "keypad5" => Some(Key::Keypad5),
            "keypad6" => Some(Key::Keypad6),
            "keypad7" => Some(Key::Keypad7),
            "f20" => Some(Key::F20),
            "keypad8" => Some(Key::Keypad8),
            "keypad9" => Some(Key::Keypad9),
            "jisyen" => Some(Key::JISYen),
            "jisunderscore" => Some(Key::JISUnderscore),
            "jiskeypadcomma" => Some(Key::JISKeypadComma),
            "f5" => Some(Key::F5),
            "f6" => Some(Key::F6),
            "f7" => Some(Key::F7),
            "f3" => Some(Key::F3),
            "f8" => Some(Key::F8),
            "f9" => Some(Key::F9),
            "jiseisu" => Some(Key::JISEisu),
            "f11" => Some(Key::F11),
            "jiskana" => Some(Key::JISKana),
            "f13" => Some(Key::F13),
            "f16" => Some(Key::F16),
            "f14" => Some(Key::F14),
            "f10" => Some(Key::F10),
            "contextualmenu" => Some(Key::ContextualMenu),
            "f12" => Some(Key::F12),
            "f15" => Some(Key::F15),
            "help" => Some(Key::Help),
            "home" => Some(Key::Home),
            "pageup" => Some(Key::PageUp),
            "forwarddelete" => Some(Key::ForwardDelete),
            "f4" => Some(Key::F4),
            "end" => Some(Key::End),
            "f2" => Some(Key::F2),
            "pagedown" => Some(Key::PageDown),
            "f1" => Some(Key::F1),
            "leftarrow" => Some(Key::LeftArrow),
            "rightarrow" => Some(Key::RightArrow),
            "downarrow" => Some(Key::DownArrow),
            "uparrow" => Some(Key::UpArrow),
            _ => None,
        }
    }
}
